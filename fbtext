#!/usr/bin/python3
# Write UTF-8 text to frame buffer, works with python 2 or 3

from __future__ import print_function
import os, sys, getopt
import fb, surface

usage = """
Usage:

    fbtext [options] text.file

Write arbitrary multi-line UTF8 text to frame buffer.

Options are:

    -b width                - screen border width, default is "0" (no border)
    -c [fg][:bg]            - foreground and background colors, default is "white:black"
    -d device               - framebuffer device, default is "/dev/fb0"
    -f path/to/font         - path to font
    -g direction            - text gravity, one of "nw", "n", "ne", "w", "c", "e", "sw", "s", or "se", default is "nw"
    -m                      - text margin in pixels, default is "10"
    -s point                - font point size, default is "20"
    -w                      - wrap text to page width
    -x                      - constrain text to page borders

Font names "m" and "p" will select built-in monospaced or proportional fonts.
The default font is "m".

-w and -x should be avoided if using proportional fonts.

If the text file name is '-' then read text from stdin.
"""

__here__ = os.path.dirname(__file__) or '.'

# set defaults
bg = "black"
fg = "white"
gravity = "nw"
point = 20
font = None
device = "/dev/fb0"
margin = 10
border = 0
wrap = False
constrain = False

try:

    opts, args = getopt.getopt(sys.argv[1:],"b:c:d:f:g:m:r:s:wxyz")

    if len(args) != 1: raise Exception("Expected a file name (or '-')")
    input = args[0]

    for opt, arg in opts:
        if   opt == "-b": border = int(arg)
        elif opt == "-c": fg,bg = (arg.lower()+":").split(":")[:2]
        elif opt == "-d": device = arg
        elif opt == "-f": font = arg
        elif opt == "-g": gravity = arg.lower()
        elif opt == "-m": margin = int(arg)
        elif opt == "-r": reference = arg
        elif opt == "-s": point = int(arg)
        elif opt == "-w": wrap = True
        elif opt == "-x": constrain = True
        elif opt == "-y": constrain = True # legacy
        elif opt == "-z": debug = True
        else: raise Exception("Invalid option '%s'" % opt)

    gravity = {"northwest":"nw","north":"n","northeast":"ne","west":"w","center":"c","east":"e","southwest":"sw","south":"s","southeast":"se"}.get(gravity,gravity)
    if not gravity in ("nw","n","ne","w","c","e","sw","s","se"): raise Exception("Invalid gravity '%s'" % gravity)

    if not font or font[:1] == "m": font = __here__+"/WenQuanYiMicroHeiMono.ttf"
    elif font[:1] == "p": font=__here__+"/WenQuanYiMicroHei.ttf"
    if not os.path.isfile(font): raise Exception("Can't find font %s" % font)

except Exception as e:

    print (str(e),"\n",usage,file = sys.stderr)
    quit(1)

f = fb.framebuffer(device)
s = surface.surface(width=f.width, height=f.height, fg=fg, bg=bg)
if border:
    s.border(border)
    margin += border
s.text(input, gravity=gravity, margin=margin, wrap=wrap, constrain=constrain, point=point, font=font)
f.pack(s.rgb())
