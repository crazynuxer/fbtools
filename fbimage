#!/usr/bin/python3
# Write image to frame buffer, works with python 2 or 3

from __future__ import print_function
import sys, getopt, fb, screen

usage="""
Usage:

    fbimage [options] image.file

Decode an image file and output to frame buffer.

Options are:

    -c color                - background color, default is "black"
    -d device               - framebuffer device, default is "/dev/fb0"
    -m width                - margin width, default is "0" (no margin)
    -o                      - overlay existing framebuffer image
    -s                      - stretch the image to fit, default is scale to fit.

If image.file is "-" then read the image from stdin.
"""

color="black"
margin=0
stretch=False
device="/dev/fb0"
overlay=False

try:

    opts, args = getopt.getopt(sys.argv[1:],"c:d:sm:o")
    for opt, arg in opts:
        if   opt == "-c": color=arg.lower()
        elif opt == "-d": device=arg
        elif opt == "-m": margin=int(arg)
        elif opt == "-s": stretch=True
        elif opt == "-o": overlay=True
        else: raise Exception("Invalid option '%s'" % opt)
    if len(args) != 1: raise Exception("Expected a file name (or '-')")
    name = args[0]

except Exception as e:
    print (str(e), usage, file=sys.stderr)
    quit(1)

f = fb.framebuffer(device)
i = screen.image(f.width, f.height, bg=color, fg=color, rgb=f.unpack() if overlay else None)
i.read(filename=name, margin=margin, stretch=stretch)
f.pack(i.rgb())
